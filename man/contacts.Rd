% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contacts.R
\docType{class}
\name{GRangesOrGInteractions-class}
\alias{GRangesOrGInteractions-class}
\alias{contacts}
\alias{length}
\alias{length,contacts-method}
\alias{dim}
\alias{dim,contacts-method}
\alias{[}
\alias{[,contacts-method}
\alias{assays}
\alias{assays,contacts-method}
\alias{assay}
\alias{assay,contacts-method}
\alias{"assay<-"}
\alias{"assay<-",contacts-method}
\alias{features}
\alias{features,contacts-method}
\alias{feature}
\alias{feature,contacts-method}
\alias{"feature<-"}
\alias{"feature<-",contacts-method}
\alias{pairsFile}
\alias{pairsFile,contacts-method}
\alias{"pairsFile<-"}
\alias{"pairsFile<-",contacts-method}
\alias{anchors}
\alias{anchors,contacts-method}
\alias{regions}
\alias{regions,contacts-method}
\alias{show}
\alias{show,contacts-method}
\title{\code{contacts} objects. An S4 class to represent
a file-stored (as .(m)cool) contact matrix imported in R.}
\usage{
contacts(
  cool_path,
  resolution = NULL,
  focus = NULL,
  metadata = NULL,
  features = NULL,
  pairs = NULL
)

\S4method{length}{contacts}(x)

\S4method{dim}{contacts}(x)

\S4method{[}{contacts,ANY,ANY,ANY}(x, i)

assays(x)

assay(x, name)

assay(x, name) <- value

features(x)

feature(x, name)

feature(x, name) <- value

pairsFile(x, name)

pairsFile(x) <- value

\S4method{anchors}{contacts}(x)

\S4method{regions}{contacts}(x)

\S4method{show}{contacts}(object)
}
\arguments{
\item{cool_path}{Path of a (m)cool file}

\item{resolution}{Resolution to use with mcool file}

\item{focus}{focus Chr. coordinates for which
interaction counts are extracted from the .(m)cool file.
Can be provided as a character string or as a GRanges object}

\item{metadata}{list of metadata}

\item{features}{features provided as a named SimpleList}

\item{pairs}{Path to an associated .pairs file}

\item{x}{A \code{contacts} object.}

\item{i}{a range or boolean vector.}

\item{object}{A \code{contacts} object.}
}
\value{
a new \code{contacts} object.
}
\description{
contacts S4 class
}
\section{Slots}{

\describe{
\item{\code{focus}}{Chr. coordinates for which interaction counts are extracted
from the .(m)cool file.}

\item{\code{metadata}}{<etadata associated with the .(m)cool file.}

\item{\code{seqinfo}}{Seqinfo, deduced from the largest resolution available
in the .(m)cool file.}

\item{\code{resolutions}}{Resolutions available in the .(m)cool file.}

\item{\code{current_resolution}}{Current resolution}

\item{\code{bins}}{Genomic bins (computed on-the-fly) of seqinfo at the current
resolution}

\item{\code{interactions}}{Genomic Interactions extracted from the .(m)cool object}

\item{\code{assays}}{Available interaction scores.}

\item{\code{features}}{Genomic features associated with the dataset (e.g.
loops, borders, etc...)}

\item{\code{pairsFile}}{path for the .pairs file associated with the .(m)cool file}

\item{\code{type}}{Optional. Type of contacts matrix (sparse, full, aggr, ratio, ...)}
}}

\examples{
library(HiContacts)
data(contacts_yeast)
contacts_yeast
library(HiContacts)
data(contacts_yeast)
length(contacts_yeast)
library(HiContacts)
data(contacts_yeast)
dim(contacts_yeast)
library(HiContacts)
data(contacts_yeast)
contacts_yeast[1:10]
library(HiContacts)
data(contacts_yeast)
assays(contacts_yeast)
library(HiContacts)
data(contacts_yeast)
assay(contacts_yeast, 1)
assay(contacts_yeast, 'raw')
library(HiContacts)
data(contacts_yeast)
assay(contacts_yeast, 'test') <- runif(length(contacts_yeast))
assay(contacts_yeast, 'test')
library(HiContacts)
data(contacts_yeast)
features(contacts_yeast)
library(HiContacts)
data(full_contacts_yeast)
feature(full_contacts_yeast, 1)
feature(full_contacts_yeast, 'centromeres')
library(HiContacts)
data(contacts_yeast)
data(centros_yeast)
feature(contacts_yeast, 'centromeres') <- centros_yeast
feature(contacts_yeast, 'centromeres')
library(HiContacts)
data(full_contacts_yeast)
pairsFile(full_contacts_yeast)
library(HiContacts)
data(full_contacts_yeast)
anchors(full_contacts_yeast)
library(HiContacts)
data(full_contacts_yeast)
regions(full_contacts_yeast)
library(HiContacts)
data(contacts_yeast)
contacts_yeast
}
